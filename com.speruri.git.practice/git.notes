Git is a version control system 
Git is a Distributed version control system
It can be decentralised a swell
It massively scales
Git operation are local and very fast
It can be committed to remote GIT repo as well

Why GIT
	It maintains the versioning/history
	It backups the changes
	We can undo changes
	We can compare the changes
	Collabration
	Isolation of changes
	Experimenting the new changes
	Code review
	Context Switching

Who needs GIT
	Any file can be version controlled. Including the Binary version file.
	So anyone who is working on the files can use GIT
	Like
		Software developers
		Text file
		Web designers
		Graphic artists
		Anyone who like to share the code
		
Choices of GIT versions
	There are 2 choices 
		1. Centralized
			Subversion. CVS are examples
			Requires connection to the central server for most of the operations
		2. Decentralised/Distributed
			Most operations are performed locally
			Can be disconnected with source server and can work local
			Tools like GIT, Mercurial(Hg) 	

There are 3 types of states in local
	1. Working directory
	2. Staging Area or Git index
	3. Commit Repository
	
There is a 4th state as well 	
	Remote Repository
	
Master Branch is the main branch in git and we branch the Master to perform changes on the branch for different versions and then finally merge into master
	

git init
	Add an existing project to the git repo

git clone <github repo url>
	Clones the remote repo to the local	

git status
	shows the changes that happened to the files wrt to the HEAD version

git log 
	logs the recent actions in to the console
	
git add
	Adds the files modified to the staging area	

git add .
	Adds all the files recursively in all the sub folders modified/added to the staging area	
	
git commit -m "message"
	commits the changes to the local repo with the mesage we passed
	
git push origin <branch>
	pushes the changes to the remote repo like github to the specified branch
	
git reset HEAD <filename> 
	resets the staged file and move it to the working directory

git checkout -- <filename>	
	removes the modifications to the file in the working directory and makes it equal to the HEAD revision

git pull origin <branch>
	pulls the changes from remote repo
	 
git ls-files
	Lists all the files which git is tracking
	


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	